[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling signal_extract
[0msrc/echo_noise.erl:3: Warning: export_all flag enabled - all functions will be exported

src/check.erl:7: Warning: export_all flag enabled - all functions will be exported

src/signal_extract.erl:10: Warning: export_all flag enabled - all functions will be exported
src/signal_extract.erl:97: Warning: erlang:get_stacktrace/0: deprecated; use the new try/catch syntax for retrieving the stack backtrace
src/signal_extract.erl:218: Warning: variable 'Sends' shadowed in 'fun'
src/signal_extract.erl:261: Warning: variable 'Pid' is unused
src/signal_extract.erl:263: Warning: variable 'Pid' is unused
src/signal_extract.erl:327: Warning: variable 'Pid' is unused
src/signal_extract.erl:339: Warning: variable 'A' is unused
src/signal_extract.erl:339: Warning: variable 'Arity' is unused
src/signal_extract.erl:339: Warning: variable 'B' is unused
src/signal_extract.erl:339: Warning: variable 'Collapsables' is unused
src/signal_extract.erl:339: Warning: variable 'F' is unused
src/signal_extract.erl:339: Warning: variable 'J' is unused
src/signal_extract.erl:339: Warning: variable 'M' is unused
src/signal_extract.erl:339: Warning: variable 'Stack' is unused
src/signal_extract.erl:342: Warning: variable 'Arity' is unused
src/signal_extract.erl:342: Warning: variable 'F' is unused
src/signal_extract.erl:342: Warning: variable 'M' is unused
src/signal_extract.erl:345: Warning: variable 'Pid' is unused
src/signal_extract.erl:347: Warning: variable 'Call' is unused
src/signal_extract.erl:347: Warning: variable 'Pid' is unused
src/signal_extract.erl:349: Warning: variable 'Pid' is unused
src/signal_extract.erl:359: Warning: variable 'Pid' is unused
src/signal_extract.erl:664: Warning: variable 'Pid' is unused
src/signal_extract.erl:664: Warning: variable 'Bs' shadowed in 'fun'
src/signal_extract.erl:664: Warning: variable 'Cnt' shadowed in 'fun'
src/signal_extract.erl:672: Warning: variable 'Pid' is unused
src/signal_extract.erl:686: Warning: variable 'Time' is unused
src/signal_extract.erl:703: Warning: variable 'Time' is unused
src/signal_extract.erl:705: Warning: variable 'ExpandedCall' is unused
src/signal_extract.erl:721: Warning: variable 'Time' is unused
src/signal_extract.erl:723: Warning: variable 'ExpandedCall' is unused
src/signal_extract.erl:916: Warning: variable '_Time' shadowed in 'fun'
src/signal_extract.erl:979: Warning: variable 'RegType' is unused

src/noise.erl:70: Warning: function 'REKEY'/1 is unused
src/noise.erl:189: Warning: function setNonce/2 is unused
src/noise.erl:245: Warning: function mixKeyAndHash/2 is unused
src/noise.erl:245: Warning: variable 'InputKeyMaterial' is unused
src/noise.erl:245: Warning: variable 'SymmetricState' is unused
src/noise.erl:248: Warning: function getHandshakeHash/1 is unused
src/noise.erl:248: Warning: variable 'SymmetricState' is unused
src/noise.erl:569: Warning: function messagePatterns/1 is unused

src/compare.erl:11: Warning: export_all flag enabled - all functions will be exported
src/compare.erl:64: Warning: variable 'R' is unused

src/run_noise.erl:4: Warning: export_all flag enabled - all functions will be exported
src/run_noise.erl:248: Warning: this clause cannot match because a previous clause at line 246 always matches
src/run_noise.erl:284: Warning: variable 'CS2' is unused
src/run_noise.erl:284: Warning: variable 'State' is unused

Eshell V10.7  (abort with ^G)
1> 

======================================================================
Checking handshake NN with trace output in NN.trace
TraceFile is "NN.trace"
Prologue is <<0,0,0,0,3>>
Running noise protocol <<"Noise_NN_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.35>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.35>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.35>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.35>,once,<<>>},1000,0]}]},
     32,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{{'READ',[32,{'INPUT_BUFFER',[0]}]},
                             '/=',
                             {signal_binary_ops,truncate,
                              [{erlang,element,
                                [2,
                                 {enoise,gen_tcp_rcv_msg,
                                  [{#Port<0.35>,once,<<>>},1000,0]}]},
                               32]}},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    eq]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.35>,once,<<>>},1000,0]}]},
       32,36]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.35>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.35>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.35>,once,<<>>},1000,0]}]},
                    32]}

ok
2> 

======================================================================
Checking handshake KN with trace output in KN.trace
TraceFile is "KN.trace"
Prologue is <<0,1,0,0,3>>
Running noise protocol <<"Noise_KN_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.36>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.36>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.36>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.36>,once,<<>>},1000,0]}]},
     32,36]}},
  {erlang,element,
   [{enacl,generichash,
     [{signal_binary_ops,merge,
       [eq,
        {erlang,element,
         [{enacl,generichash,
           [{erlang,element,
             [{enacl,generichash,
               [{signal_binary_ops,merge,
                 [eq,
                  {erlang,element,
                   [{enacl,generichash,
                     [{signal_binary_ops,merge,
                       [{{enacl,crypto_sign_ed25519_public_to_curve25519,
                          [{signal_binary_ops,extract,
                            [{'LOCAL_STATIC',[]},32,32]}]},
                         '/=',
                         {get_key,get_key,
                          ["client_key_25519",
                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                           pub]}},
                        eq]},
                      eq]},
                    eq]}]},
                eq]},
              eq]},
            eq]},
          eq]}]},
      eq]},
    eq]},
  eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [eq,
                            {{enacl,crypto_sign_ed25519_secret_to_curve25519,
                              [{'LOCAL_STATIC',[]}]},
                             '/=',
                             {get_key,get_key,
                              ["client_key_25519",
                               "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                               priv]}}]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.36>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.36>,once,<<>>},1000,0]}]},
       32,36]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.36>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.36>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.36>,once,<<>>},1000,0]}]},
                    32]}

ok
3> 

======================================================================
Checking handshake NK with trace output in NK.trace
TraceFile is "NK.trace"
Prologue is <<0,2,0,0,3>>
Running noise protocol <<"Noise_NK_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.37>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'REMOTE_STATIC',
                                                                      []},
                                                                     '/=',
                                                                     {get_key,
                                                                      get_key,
                                                                      ["server_key_25519",
                                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                       pub]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.37>,once,<<>>},1000,0]}]},
       32]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.37>,once,<<>>},1000,0]}]},
                    32]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.37>,once,<<>>},1000,0]}]},
     32,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{{'READ',[32,{'INPUT_BUFFER',[0]}]},
                             '/=',
                             {signal_binary_ops,truncate,
                              [{erlang,element,
                                [2,
                                 {enoise,gen_tcp_rcv_msg,
                                  [{#Port<0.37>,once,<<>>},1000,0]}]},
                               32]}},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'REMOTE_STATIC',[]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["server_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   pub]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.37>,once,<<>>},1000,0]}]},
       32,36]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.37>,once,<<>>},1000,0]}]},
       32]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.37>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.37>,once,<<>>},1000,0]}]},
                    32]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}

ok
4> 

======================================================================
Checking handshake KK with trace output in KK.trace
TraceFile is "KK.trace"
Prologue is <<0,3,0,0,3>>
Running noise protocol <<"Noise_KK_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [eq,
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.38>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [eq,
                                                                                        {{enacl,
                                                                                          crypto_sign_ed25519_secret_to_curve25519,
                                                                                          [{'LOCAL_STATIC',
                                                                                            []}]},
                                                                                         '/=',
                                                                                         {get_key,
                                                                                          get_key,
                                                                                          ["client_key_25519",
                                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                           priv]}}]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                {signal_binary_ops,
                                                                                 xor_words_with_const,
                                                                                 [eq,
                                                                                  {signal_binary_ops,
                                                                                   pad,
                                                                                   [eq,
                                                                                    eq,
                                                                                    {erlang,
                                                                                     element,
                                                                                     [{enacl,
                                                                                       generichash,
                                                                                       [{signal_binary_ops,
                                                                                         merge,
                                                                                         [eq,
                                                                                          {signal_binary_ops,
                                                                                           xor_words_with_const,
                                                                                           [eq,
                                                                                            {signal_binary_ops,
                                                                                             pad,
                                                                                             [eq,
                                                                                              eq,
                                                                                              {erlang,
                                                                                               element,
                                                                                               [{enacl,
                                                                                                 generichash,
                                                                                                 [{signal_binary_ops,
                                                                                                   merge,
                                                                                                   [{erlang,
                                                                                                     element,
                                                                                                     [{enacl,
                                                                                                       generichash,
                                                                                                       [{signal_binary_ops,
                                                                                                         merge,
                                                                                                         [{enacl,
                                                                                                           curve25519_scalarmult,
                                                                                                           [{{'REMOTE_STATIC',
                                                                                                              []},
                                                                                                             '/=',
                                                                                                             {get_key,
                                                                                                              get_key,
                                                                                                              ["server_key_25519",
                                                                                                               "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                                               pub]}},
                                                                                                            eq]},
                                                                                                          eq]},
                                                                                                        eq]},
                                                                                                      eq]},
                                                                                                    eq]},
                                                                                                  eq]},
                                                                                                eq]}]}]}]},
                                                                                        eq]},
                                                                                      eq]}]}]}]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.38>,once,<<>>},1000,0]}]},
       32]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.38>,once,<<>>},1000,0]}]},
                    32]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.38>,once,<<>>},1000,0]}]},
     32,36]}},
  {erlang,element,
   [{enacl,generichash,
     [{signal_binary_ops,merge,
       [eq,
        {erlang,element,
         [{enacl,generichash,
           [{signal_binary_ops,merge,
             [eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [eq,
                          {erlang,element,
                           [{enacl,generichash,
                             [{signal_binary_ops,merge,
                               [{{enacl,
                                  crypto_sign_ed25519_public_to_curve25519,
                                  [{signal_binary_ops,extract,
                                    [{'LOCAL_STATIC',[]},32,32]}]},
                                 '/=',
                                 {get_key,get_key,
                                  ["client_key_25519",
                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                   pub]}},
                                eq]},
                              eq]},
                            eq]}]},
                        eq]},
                      eq]}]},
                  eq]},
                eq]}]},
            eq]},
          eq]}]},
      eq]},
    eq]},
  eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.38>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [eq,
                                                                    {{enacl,
                                                                      crypto_sign_ed25519_secret_to_curve25519,
                                                                      [{'LOCAL_STATIC',
                                                                        []}]},
                                                                     '/=',
                                                                     {get_key,
                                                                      get_key,
                                                                      ["client_key_25519",
                                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                       priv]}}]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'REMOTE_STATIC',
                                                                                          []},
                                                                                         '/=',
                                                                                         {get_key,
                                                                                          get_key,
                                                                                          ["server_key_25519",
                                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                           pub]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.38>,once,<<>>},1000,0]}]},
       32,36]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.38>,once,<<>>},1000,0]}]},
       32]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.38>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.38>,once,<<>>},1000,0]}]},
                    32]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}

ok
5> 

======================================================================
Checking handshake NX with trace output in NX.trace
TraceFile is "NX.trace"
Prologue is <<0,4,0,0,3>>
Running noise protocol <<"Noise_NX_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{enacl,
                                                 aead_chacha20poly1305_decrypt,
                                                 [{{'READ',
                                                    [48,
                                                     {'SKIP',
                                                      [32,
                                                       {'INPUT_BUFFER',
                                                        [0]}]}]},
                                                   '/=',
                                                   {signal_binary_ops,
                                                    truncate,
                                                    [{signal_binary_ops,
                                                      extract,
                                                      [{erlang,element,
                                                        [2,
                                                         {enoise,
                                                          gen_tcp_rcv_msg,
                                                          [{#Port<0.39>,once,
                                                            <<>>},
                                                           1000,0]}]},
                                                       32,84]},
                                                     48]}},
                                                  eq,eq,eq]},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.39>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.39>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
     {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{signal_binary_ops,extract,
      [{erlang,element,
        [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
       32,84]},
     48,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{enacl,aead_chacha20poly1305_decrypt,
                             [{{'READ',
                                [48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
                               '/=',
                               {signal_binary_ops,truncate,
                                [{signal_binary_ops,extract,
                                  [{erlang,element,
                                    [2,
                                     {enoise,gen_tcp_rcv_msg,
                                      [{#Port<0.39>,once,<<>>},1000,0]}]},
                                   32,84]},
                                 48]}},
                              eq,eq,eq]},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.39>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
       {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
  {signal_binary_ops,extract,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
            32,84]},
       48,36]}},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
         {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
          32,84]},
     48,36]}


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.39>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.39>,once,<<>>},1000,0]}]},
                    32]}

ok
6> 

======================================================================
Checking handshake KX with trace output in KX.trace
TraceFile is "KX.trace"
Prologue is <<0,5,0,0,3>>
Running noise protocol <<"Noise_KX_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{enacl,
                                                 aead_chacha20poly1305_decrypt,
                                                 [{{'READ',
                                                    [48,
                                                     {'SKIP',
                                                      [32,
                                                       {'INPUT_BUFFER',
                                                        [0]}]}]},
                                                   '/=',
                                                   {signal_binary_ops,
                                                    truncate,
                                                    [{signal_binary_ops,
                                                      extract,
                                                      [{erlang,element,
                                                        [2,
                                                         {enoise,
                                                          gen_tcp_rcv_msg,
                                                          [{#Port<0.40>,once,
                                                            <<>>},
                                                           1000,0]}]},
                                                       32,84]},
                                                     48]}},
                                                  {erlang,element,
                                                   [{enacl,generichash,
                                                     [{signal_binary_ops,
                                                       merge,
                                                       [eq,
                                                        {erlang,element,
                                                         [{enacl,generichash,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [eq,
                                                                  {erlang,
                                                                   element,
                                                                   [{enacl,
                                                                     generichash,
                                                                     [{signal_binary_ops,
                                                                       merge,
                                                                       [{{enacl,
                                                                          crypto_sign_ed25519_public_to_curve25519,
                                                                          [{signal_binary_ops,
                                                                            extract,
                                                                            [{'LOCAL_STATIC',
                                                                              []},
                                                                             32,
                                                                             32]}]},
                                                                         '/=',
                                                                         {get_key,
                                                                          get_key,
                                                                          ["client_key_25519",
                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                           pub]}},
                                                                        eq]},
                                                                      eq]},
                                                                    eq]}]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]}]},
                                                      eq]},
                                                    eq]},
                                                  eq,eq]},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [eq,
                                                                    {{enacl,
                                                                      crypto_sign_ed25519_secret_to_curve25519,
                                                                      [{'LOCAL_STATIC',
                                                                        []}]},
                                                                     '/=',
                                                                     {get_key,
                                                                      get_key,
                                                                      ["client_key_25519",
                                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                       priv]}}]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'READ',
                                                                                          [32,
                                                                                           {'INPUT_BUFFER',
                                                                                            [0]}]},
                                                                                         '/=',
                                                                                         {signal_binary_ops,
                                                                                          truncate,
                                                                                          [{erlang,
                                                                                            element,
                                                                                            [2,
                                                                                             {enoise,
                                                                                              gen_tcp_rcv_msg,
                                                                                              [{#Port<0.40>,
                                                                                                once,
                                                                                                <<>>},
                                                                                               1000,
                                                                                               0]}]},
                                                                                           32]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.40>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
     {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{signal_binary_ops,extract,
      [{erlang,element,
        [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
       32,84]},
     48,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{enacl,aead_chacha20poly1305_decrypt,
                             [{{'READ',
                                [48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
                               '/=',
                               {signal_binary_ops,truncate,
                                [{signal_binary_ops,extract,
                                  [{erlang,element,
                                    [2,
                                     {enoise,gen_tcp_rcv_msg,
                                      [{#Port<0.40>,once,<<>>},1000,0]}]},
                                   32,84]},
                                 48]}},
                              {erlang,element,
                               [{enacl,generichash,
                                 [{signal_binary_ops,merge,
                                   [eq,
                                    {erlang,element,
                                     [{enacl,generichash,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [eq,
                                              {erlang,element,
                                               [{enacl,generichash,
                                                 [{signal_binary_ops,merge,
                                                   [{{enacl,
                                                      crypto_sign_ed25519_public_to_curve25519,
                                                      [{signal_binary_ops,
                                                        extract,
                                                        [{'LOCAL_STATIC',[]},
                                                         32,32]}]},
                                                     '/=',
                                                     {get_key,get_key,
                                                      ["client_key_25519",
                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                       pub]}},
                                                    eq]},
                                                  eq]},
                                                eq]}]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]}]},
                                  eq]},
                                eq]},
                              eq,eq]},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.40>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
       {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
  {signal_binary_ops,extract,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
            32,84]},
       48,36]}},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
         {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
          32,84]},
     48,36]}


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.40>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.40>,once,<<>>},1000,0]}]},
                    32]}

ok
7> 

======================================================================
Checking handshake XN with trace output in XN.trace
TraceFile is "XN.trace"
Prologue is <<0,6,0,0,3>>
Running noise protocol <<"Noise_XN_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.41>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.41>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.41>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.41>,once,<<>>},1000,0]}]},
     32,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{{'READ',[32,{'INPUT_BUFFER',[0]}]},
                             '/=',
                             {signal_binary_ops,truncate,
                              [{erlang,element,
                                [2,
                                 {enoise,gen_tcp_rcv_msg,
                                  [{#Port<0.41>,once,<<>>},1000,0]}]},
                               32]}},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    eq]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.41>,once,<<>>},1000,0]}]},
       32,36]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.41>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.41>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.41>,once,<<>>},1000,0]}]},
                    32]}

ok
8> 

======================================================================
Checking handshake IN with trace output in IN.trace
TraceFile is "IN.trace"
Prologue is <<0,7,0,0,3>>
Running noise protocol <<"Noise_IN_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.42>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.42>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.42>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.42>,once,<<>>},1000,0]}]},
     32,36]}},
  {erlang,element,
   [{enacl,generichash,
     [{signal_binary_ops,merge,
       [eq,
        {erlang,element,
         [{enacl,generichash,
           [{erlang,element,
             [{enacl,generichash,
               [{signal_binary_ops,merge,
                 [{{enacl,crypto_sign_ed25519_public_to_curve25519,
                    [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
                   '/=',
                   {get_key,get_key,
                    ["client_key_25519",
                     "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                     pub]}},
                  eq]},
                eq]},
              eq]},
            eq]},
          eq]}]},
      eq]},
    eq]},
  eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [eq,
                            {{enacl,crypto_sign_ed25519_secret_to_curve25519,
                              [{'LOCAL_STATIC',[]}]},
                             '/=',
                             {get_key,get_key,
                              ["client_key_25519",
                               "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                               priv]}}]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.42>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.42>,once,<<>>},1000,0]}]},
       32,36]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.42>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.42>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.42>,once,<<>>},1000,0]}]},
                    32]}

ok
9> 

======================================================================
Checking handshake XK with trace output in XK.trace
TraceFile is "XK.trace"
Prologue is <<0,8,0,0,3>>
Running noise protocol <<"Noise_XK_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.43>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'REMOTE_STATIC',
                                                                                          []},
                                                                                         '/=',
                                                                                         {get_key,
                                                                                          get_key,
                                                                                          ["server_key_25519",
                                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                           pub]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.43>,once,<<>>},1000,0]}]},
       32]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.43>,once,<<>>},1000,0]}]},
                    32]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.43>,once,<<>>},1000,0]}]},
     32,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{{'READ',[32,{'INPUT_BUFFER',[0]}]},
                             '/=',
                             {signal_binary_ops,truncate,
                              [{erlang,element,
                                [2,
                                 {enoise,gen_tcp_rcv_msg,
                                  [{#Port<0.43>,once,<<>>},1000,0]}]},
                               32]}},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'REMOTE_STATIC',[]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["server_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   pub]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.43>,once,<<>>},1000,0]}]},
       32,36]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.43>,once,<<>>},1000,0]}]},
       32]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.43>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.43>,once,<<>>},1000,0]}]},
                    32]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}

ok
10> 

======================================================================
Checking handshake IK with trace output in IK.trace
TraceFile is "IK.trace"
Prologue is <<0,9,0,0,3>>
Running noise protocol <<"Noise_IK_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [eq,
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.44>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [eq,
                                                                                        {{enacl,
                                                                                          crypto_sign_ed25519_secret_to_curve25519,
                                                                                          [{'LOCAL_STATIC',
                                                                                            []}]},
                                                                                         '/=',
                                                                                         {get_key,
                                                                                          get_key,
                                                                                          ["client_key_25519",
                                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                           priv]}}]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                {signal_binary_ops,
                                                                                 xor_words_with_const,
                                                                                 [eq,
                                                                                  {signal_binary_ops,
                                                                                   pad,
                                                                                   [eq,
                                                                                    eq,
                                                                                    {erlang,
                                                                                     element,
                                                                                     [{enacl,
                                                                                       generichash,
                                                                                       [{signal_binary_ops,
                                                                                         merge,
                                                                                         [eq,
                                                                                          {signal_binary_ops,
                                                                                           xor_words_with_const,
                                                                                           [eq,
                                                                                            {signal_binary_ops,
                                                                                             pad,
                                                                                             [eq,
                                                                                              eq,
                                                                                              {erlang,
                                                                                               element,
                                                                                               [{enacl,
                                                                                                 generichash,
                                                                                                 [{signal_binary_ops,
                                                                                                   merge,
                                                                                                   [{erlang,
                                                                                                     element,
                                                                                                     [{enacl,
                                                                                                       generichash,
                                                                                                       [{signal_binary_ops,
                                                                                                         merge,
                                                                                                         [{enacl,
                                                                                                           curve25519_scalarmult,
                                                                                                           [{{'REMOTE_STATIC',
                                                                                                              []},
                                                                                                             '/=',
                                                                                                             {get_key,
                                                                                                              get_key,
                                                                                                              ["server_key_25519",
                                                                                                               "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                                               pub]}},
                                                                                                            eq]},
                                                                                                          eq]},
                                                                                                        eq]},
                                                                                                      eq]},
                                                                                                    eq]},
                                                                                                  eq]},
                                                                                                eq]}]}]}]},
                                                                                        eq]},
                                                                                      eq]}]}]}]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.44>,once,<<>>},1000,0]}]},
       32]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.44>,once,<<>>},1000,0]}]},
                    32]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
     {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{erlang,element,
      [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.44>,once,<<>>},1000,0]}]},
     32,36]}},
  {erlang,element,
   [{enacl,generichash,
     [{signal_binary_ops,merge,
       [eq,
        {erlang,element,
         [{enacl,generichash,
           [{signal_binary_ops,merge,
             [eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{enacl,aead_chacha20poly1305_encrypt,
                     [{{enacl,crypto_sign_ed25519_public_to_curve25519,
                        [{signal_binary_ops,extract,
                          [{'LOCAL_STATIC',[]},32,32]}]},
                       '/=',
                       {get_key,get_key,
                        ["client_key_25519",
                         "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                         pub]}},
                      eq,eq,eq]},
                    eq]},
                  eq]},
                eq]}]},
            eq]},
          eq]}]},
      eq]},
    eq]},
  eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.44>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [eq,
                                                                    {{enacl,
                                                                      crypto_sign_ed25519_secret_to_curve25519,
                                                                      [{'LOCAL_STATIC',
                                                                        []}]},
                                                                     '/=',
                                                                     {get_key,
                                                                      get_key,
                                                                      ["client_key_25519",
                                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                       priv]}}]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'REMOTE_STATIC',
                                                                                          []},
                                                                                         '/=',
                                                                                         {get_key,
                                                                                          get_key,
                                                                                          ["server_key_25519",
                                                                                           "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                                           pub]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
       {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,extract,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.44>,once,<<>>},1000,0]}]},
       32,36]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.44>,once,<<>>},1000,0]}]},
       32]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'REMOTE_STATIC',[]},
  {get_key,get_key,
      ["server_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
         {'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.44>,once,<<>>},1000,0]}]},
                    32,36]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.44>,once,<<>>},1000,0]}]},
                    32]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'REMOTE_STATIC',[]}
DIFFERS FROM
{get_key,get_key,
         ["server_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}

ok
11> 

======================================================================
Checking handshake XX with trace output in XX.trace
TraceFile is "XX.trace"
Prologue is <<0,10,0,0,3>>
Running noise protocol <<"Noise_XX_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{enacl,
                                                                     aead_chacha20poly1305_decrypt,
                                                                     [{{'READ',
                                                                        [48,
                                                                         {'SKIP',
                                                                          [32,
                                                                           {'INPUT_BUFFER',
                                                                            [0]}]}]},
                                                                       '/=',
                                                                       {signal_binary_ops,
                                                                        truncate,
                                                                        [{signal_binary_ops,
                                                                          extract,
                                                                          [{erlang,
                                                                            element,
                                                                            [2,
                                                                             {enoise,
                                                                              gen_tcp_rcv_msg,
                                                                              [{#Port<0.45>,
                                                                                once,
                                                                                <<>>},
                                                                               1000,
                                                                               0]}]},
                                                                           32,
                                                                           84]},
                                                                         48]}},
                                                                      eq,eq,
                                                                      eq]},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'READ',
                                                                                          [32,
                                                                                           {'INPUT_BUFFER',
                                                                                            [0]}]},
                                                                                         '/=',
                                                                                         {signal_binary_ops,
                                                                                          truncate,
                                                                                          [{erlang,
                                                                                            element,
                                                                                            [2,
                                                                                             {enoise,
                                                                                              gen_tcp_rcv_msg,
                                                                                              [{#Port<0.45>,
                                                                                                once,
                                                                                                <<>>},
                                                                                               1000,
                                                                                               0]}]},
                                                                                           32]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.45>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
     {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{signal_binary_ops,extract,
      [{erlang,element,
        [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
       32,84]},
     48,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{enacl,aead_chacha20poly1305_decrypt,
                             [{{'READ',
                                [48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
                               '/=',
                               {signal_binary_ops,truncate,
                                [{signal_binary_ops,extract,
                                  [{erlang,element,
                                    [2,
                                     {enoise,gen_tcp_rcv_msg,
                                      [{#Port<0.45>,once,<<>>},1000,0]}]},
                                   32,84]},
                                 48]}},
                              eq,eq,eq]},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{{'READ',
                                                  [32,{'INPUT_BUFFER',[0]}]},
                                                 '/=',
                                                 {signal_binary_ops,truncate,
                                                  [{erlang,element,
                                                    [2,
                                                     {enoise,gen_tcp_rcv_msg,
                                                      [{#Port<0.45>,once,<<>>},
                                                       1000,0]}]},
                                                   32]}},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
       {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
  {signal_binary_ops,extract,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
            32,84]},
       48,36]}},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
         {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
          32,84]},
     48,36]}


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.45>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.45>,once,<<>>},1000,0]}]},
                    32]}

ok
12> 

======================================================================
Checking handshake IX with trace output in IX.trace
TraceFile is "IX.trace"
Prologue is <<0,11,0,0,3>>
Running noise protocol <<"Noise_IX_25519_ChaChaPoly_BLAKE2b">>


Send Comparison:
{enacl,aead_chacha20poly1305_encrypt,
 [{{'MESSAGE',[]},'/=',<<"ok\n">>},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [eq,
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [{enacl,
                                                 aead_chacha20poly1305_decrypt,
                                                 [{{'READ',
                                                    [48,
                                                     {'SKIP',
                                                      [32,
                                                       {'INPUT_BUFFER',
                                                        [0]}]}]},
                                                   '/=',
                                                   {signal_binary_ops,
                                                    truncate,
                                                    [{signal_binary_ops,
                                                      extract,
                                                      [{erlang,element,
                                                        [2,
                                                         {enoise,
                                                          gen_tcp_rcv_msg,
                                                          [{#Port<0.46>,once,
                                                            <<>>},
                                                           1000,0]}]},
                                                       32,84]},
                                                     48]}},
                                                  {erlang,element,
                                                   [{enacl,generichash,
                                                     [{signal_binary_ops,
                                                       merge,
                                                       [eq,
                                                        {erlang,element,
                                                         [{enacl,generichash,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{{enacl,
                                                                    crypto_sign_ed25519_public_to_curve25519,
                                                                    [{signal_binary_ops,
                                                                      extract,
                                                                      [{'LOCAL_STATIC',
                                                                        []},
                                                                       32,
                                                                       32]}]},
                                                                   '/=',
                                                                   {get_key,
                                                                    get_key,
                                                                    ["client_key_25519",
                                                                     "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                     pub]}},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]}]},
                                                      eq]},
                                                    eq]},
                                                  eq,eq]},
                                                eq]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [eq,
                                                                    {{enacl,
                                                                      crypto_sign_ed25519_secret_to_curve25519,
                                                                      [{'LOCAL_STATIC',
                                                                        []}]},
                                                                     '/=',
                                                                     {get_key,
                                                                      get_key,
                                                                      ["client_key_25519",
                                                                       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                                       priv]}}]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            {signal_binary_ops,
                                                             xor_words_with_const,
                                                             [eq,
                                                              {signal_binary_ops,
                                                               pad,
                                                               [eq,eq,
                                                                {erlang,
                                                                 element,
                                                                 [{enacl,
                                                                   generichash,
                                                                   [{signal_binary_ops,
                                                                     merge,
                                                                     [eq,
                                                                      {signal_binary_ops,
                                                                       xor_words_with_const,
                                                                       [eq,
                                                                        {signal_binary_ops,
                                                                         pad,
                                                                         [eq,
                                                                          eq,
                                                                          {erlang,
                                                                           element,
                                                                           [{enacl,
                                                                             generichash,
                                                                             [{signal_binary_ops,
                                                                               merge,
                                                                               [{erlang,
                                                                                 element,
                                                                                 [{enacl,
                                                                                   generichash,
                                                                                   [{signal_binary_ops,
                                                                                     merge,
                                                                                     [{enacl,
                                                                                       curve25519_scalarmult,
                                                                                       [{{'READ',
                                                                                          [32,
                                                                                           {'INPUT_BUFFER',
                                                                                            [0]}]},
                                                                                         '/=',
                                                                                         {signal_binary_ops,
                                                                                          truncate,
                                                                                          [{erlang,
                                                                                            element,
                                                                                            [2,
                                                                                             {enoise,
                                                                                              gen_tcp_rcv_msg,
                                                                                              [{#Port<0.46>,
                                                                                                once,
                                                                                                <<>>},
                                                                                               1000,
                                                                                               0]}]},
                                                                                           32]}},
                                                                                        eq]},
                                                                                      eq]},
                                                                                    eq]},
                                                                                  eq]},
                                                                                eq]},
                                                                              eq]},
                                                                            eq]}]}]}]},
                                                                    eq]},
                                                                  eq]}]}]}]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'MESSAGE',[]},<<"ok\n">>},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
       32]}}]

Send substitution:
**************************


Term
{'MESSAGE',[]}
DIFFERS FROM
<<"ok\n">>


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.46>,once,<<>>},1000,0]}]},
                    32]}



Payload Comparison:
{enacl,aead_chacha20poly1305_decrypt,
 [{{'READ',
    [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
     {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
   '/=',
   {signal_binary_ops,extract,
    [{signal_binary_ops,extract,
      [{erlang,element,
        [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
       32,84]},
     48,36]}},
  eq,eq,
  {signal_binary_ops,truncate,
   [eq,
    {erlang,element,
     [{enacl,generichash,
       [{signal_binary_ops,merge,
         [eq,
          {signal_binary_ops,xor_words_with_const,
           [eq,
            {signal_binary_ops,pad,
             [eq,eq,
              {erlang,element,
               [{enacl,generichash,
                 [{signal_binary_ops,merge,
                   [{erlang,element,
                     [{enacl,generichash,
                       [{signal_binary_ops,merge,
                         [{enacl,curve25519_scalarmult,
                           [{enacl,aead_chacha20poly1305_decrypt,
                             [{{'READ',
                                [48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
                               '/=',
                               {signal_binary_ops,truncate,
                                [{signal_binary_ops,extract,
                                  [{erlang,element,
                                    [2,
                                     {enoise,gen_tcp_rcv_msg,
                                      [{#Port<0.46>,once,<<>>},1000,0]}]},
                                   32,84]},
                                 48]}},
                              {erlang,element,
                               [{enacl,generichash,
                                 [{signal_binary_ops,merge,
                                   [eq,
                                    {erlang,element,
                                     [{enacl,generichash,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{{enacl,
                                                crypto_sign_ed25519_public_to_curve25519,
                                                [{signal_binary_ops,extract,
                                                  [{'LOCAL_STATIC',[]},
                                                   32,32]}]},
                                               '/=',
                                               {get_key,get_key,
                                                ["client_key_25519",
                                                 "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                 pub]}},
                                              eq]},
                                            eq]},
                                          eq]},
                                        eq]},
                                      eq]}]},
                                  eq]},
                                eq]},
                              eq,eq]},
                            eq]},
                          eq]},
                        eq]},
                      eq]},
                    {signal_binary_ops,xor_words_with_const,
                     [eq,
                      {signal_binary_ops,pad,
                       [eq,eq,
                        {erlang,element,
                         [{enacl,generichash,
                           [{signal_binary_ops,merge,
                             [eq,
                              {signal_binary_ops,xor_words_with_const,
                               [eq,
                                {signal_binary_ops,pad,
                                 [eq,eq,
                                  {erlang,element,
                                   [{enacl,generichash,
                                     [{signal_binary_ops,merge,
                                       [{erlang,element,
                                         [{enacl,generichash,
                                           [{signal_binary_ops,merge,
                                             [{enacl,curve25519_scalarmult,
                                               [eq,
                                                {{enacl,
                                                  crypto_sign_ed25519_secret_to_curve25519,
                                                  [{'LOCAL_STATIC',[]}]},
                                                 '/=',
                                                 {get_key,get_key,
                                                  ["client_key_25519",
                                                   "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
                                                   priv]}}]},
                                              eq]},
                                            eq]},
                                          eq]},
                                        {signal_binary_ops,
                                         xor_words_with_const,
                                         [eq,
                                          {signal_binary_ops,pad,
                                           [eq,eq,
                                            {erlang,element,
                                             [{enacl,generichash,
                                               [{signal_binary_ops,merge,
                                                 [eq,
                                                  {signal_binary_ops,
                                                   xor_words_with_const,
                                                   [eq,
                                                    {signal_binary_ops,pad,
                                                     [eq,eq,
                                                      {erlang,element,
                                                       [{enacl,generichash,
                                                         [{signal_binary_ops,
                                                           merge,
                                                           [{erlang,element,
                                                             [{enacl,
                                                               generichash,
                                                               [{signal_binary_ops,
                                                                 merge,
                                                                 [{enacl,
                                                                   curve25519_scalarmult,
                                                                   [{{'READ',
                                                                      [32,
                                                                       {'INPUT_BUFFER',
                                                                        [0]}]},
                                                                     '/=',
                                                                     {signal_binary_ops,
                                                                      truncate,
                                                                      [{erlang,
                                                                        element,
                                                                        [2,
                                                                         {enoise,
                                                                          gen_tcp_rcv_msg,
                                                                          [{#Port<0.46>,
                                                                            once,
                                                                            <<>>},
                                                                           1000,
                                                                           0]}]},
                                                                       32]}},
                                                                    eq]},
                                                                  eq]},
                                                                eq]},
                                                              eq]},
                                                            eq]},
                                                          eq]},
                                                        eq]}]}]}]},
                                                eq]},
                                              eq]}]}]}]},
                                      eq]},
                                    eq]}]}]}]},
                            eq]},
                          eq]}]}]}]},
                  eq]},
                eq]}]}]}]},
        eq]},
      eq]}]}]}
Substitution:
[{{'READ',
      [{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
       {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
  {signal_binary_ops,extract,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
            32,84]},
       48,36]}},
 {{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]},
  {signal_binary_ops,truncate,
      [{signal_binary_ops,extract,
           [{erlang,element,
                [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
            32,84]},
       48]}},
 {{enacl,crypto_sign_ed25519_public_to_curve25519,
      [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       pub]}},
 {{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]},
  {get_key,get_key,
      ["client_key_25519",
       "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
       priv]}},
 {{'READ',[32,{'INPUT_BUFFER',[0]}]},
  {signal_binary_ops,truncate,
      [{erlang,element,
           [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
       32]}}]


Payload substitution:
*************************


Term
{'READ',[{'SIZE',[{'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]},
         {'SKIP',[32,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}]}
DIFFERS FROM
{signal_binary_ops,extract,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
          32,84]},
     48,36]}


Term
{'READ',[48,{'SKIP',[32,{'INPUT_BUFFER',[0]}]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
    [{signal_binary_ops,extract,
         [{erlang,element,
              [2,{enoise,gen_tcp_rcv_msg,[{#Port<0.46>,once,<<>>},1000,0]}]},
          32,84]},
     48]}


Term
{enacl,crypto_sign_ed25519_public_to_curve25519,
       [{signal_binary_ops,extract,[{'LOCAL_STATIC',[]},32,32]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          pub]}


Term
{enacl,crypto_sign_ed25519_secret_to_curve25519,[{'LOCAL_STATIC',[]}]}
DIFFERS FROM
{get_key,get_key,
         ["client_key_25519",
          "/home/fred/gits/enoise_verification/SecurityTraceExceptionFred/signal_extract/_build/test/lib/signal_extract/priv/testing_keys",
          priv]}


Term
{'READ',[32,{'INPUT_BUFFER',[0]}]}
DIFFERS FROM
{signal_binary_ops,truncate,
                   [{erlang,element,
                            [2,
                             {enoise,gen_tcp_rcv_msg,
                                     [{#Port<0.46>,once,<<>>},1000,0]}]},
                    32]}

ok
13> 